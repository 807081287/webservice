<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"  
    xmlns:tool="http://www.springframework.org/schema/tool"
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd    
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd    
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd    
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context.xsd    
     http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd    
     http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool.xsd
     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
    default-lazy-init="true" default-autowire="byName">
    <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
         <property name="dir" value="META-INF/druid/wall/oracle" />
         <property name="selectAllColumnAllow" value="false"></property>
    </bean>
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="oracle" />
        <property name="config" ref="wall-filter-config" />
        <property name="logViolation" value="true" />
        <property name="throwException" value="false" />
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location">
            <value>classpath:jdbc.properties</value>
        </property>
    </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
        <property name="url" value="${url}" />
         <property name="username" value="${username}"></property>
         <property name="password" value="${password}" />
         <property name="filters" value="${filters}"></property>
         <property name="maxActive" value="${maxActive}"></property>
         <property name="initialSize" value="${initialSize}"></property>
         <property name="maxWait" value="${maxWait}"></property>
         <property name="minIdle" value="${minIdle}"></property>
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"></property>
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"></property>
         <property name="validationQuery" value="${validationQuery}"></property>
         <property name="testWhileIdle" value="${testWhileIdle}"></property>
         <property name="testOnBorrow" value="${testOnBorrow}"></property>
	     <property name="testOnReturn" value="${testOnReturn}"></property>
	     <property name="poolPreparedStatements" value="${poolPreparedStatements}"></property>
	     <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"></property>
	     <property name="proxyFilters">
          <list>
              <ref bean="wall-filter"/>
          </list>
        </property>
    </bean>
    <cache:annotation-driven cache-manager="cacheManager"/>
    
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"></property>
    </bean>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager"  ref="cacheManagerFactory"/>    
    </bean>
    
    <context:component-scan base-package="com.flux.tmsws.*" />
    <bean id = "transactionManager"  class = "org.springframework.jdbc.datasource.DataSourceTransactionManager" > 
         <property name = "dataSource"> 
             <ref bean = "dataSource"/> 
         </property> 
    </bean>
    <bean id="jdbcTemplate"
        class="org.springframework.jdbc.core.JdbcTemplate" abstract="false" lazy-init="false" autowire="default">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
    </bean>
    <bean id="userDao" class="com.flux.tmsws.dao.Impl.UserDaoImpl">
    </bean>
    <bean id="applicationContext" class="org.apache.axis2.extensions.spring.receivers.ApplicationContextHolder"></bean>
    <bean id="testService" class="com.flux.tmsws.service.WebServiceTest" >  
    </bean>
    <bean id="userService" class="com.flux.tmsws.service.UserService" >  
    </bean>
    <!-- the monitoring of spring by druid -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"  scope="prototype">
        <property name="patterns">
            <list>
                <value>com.flux.tmsws.dao.*</value>
             </list>
        </property>
    </bean>
	<aop:config proxy-target-class="true">
    <aop:advisor advice-ref="druid-stat-interceptor"
        pointcut-ref="druid-stat-pointcut" />
    </aop:config>
</beans>